package com.lollibond.chat.repo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.datastax.driver.core.Cluster;
import com.datastax.driver.core.Row;
import com.datastax.driver.core.Session;
import com.lollibond.chat.domain.ThreadList;

public class ThreadListRepository {

	String serverIp = "127.0.0.1";
	String keyspace = "pigeon";
	Cluster cluster = Cluster.builder().addContactPoints(serverIp).withPort(9042).build();
	Session session = cluster.connect(keyspace);

	public boolean save(ThreadList threadList) {

		StringBuilder builder = new StringBuilder();
		builder.append("insert into thread_list (UID,TID,lastread_time,firstmsg_time, hidden, hidefrom_time) values('")
				.append(threadList.getUid()).append("','").append(threadList.getTid()).append("',")
				.append(threadList.getLastread_time()).append(",").append(threadList.getFirstmsg_time()).append(",")
				.append(threadList.isHidden()).append(",").append(threadList.getHidefrom_date()).append(");");
		session.execute(builder.toString());
		System.out.println(builder.toString());
		return true;
	}

	public ThreadList getDelteSetting(String uid, String tid) {
		StringBuilder builder = new StringBuilder("select hidden,hidefrom_time from thread_list where uid='");
		builder.append(uid).append("' and tid='").append(tid).append("'");
		ThreadList thread = new ThreadList();
		for (Row row : session.execute(builder.toString())) {
			System.out.println(row.toString());
			thread.setHidden(row.getBool("hidden"));
			thread.setHidefrom_date(row.getDate("hidefrom_time"));
			
		}

		return thread;
	}

	public List<ThreadList> getThreadListByUID(String uid, int limit) {
		StringBuilder builder = new StringBuilder("select hidden,hidefrom_time from thread_list where uid='");
		builder.append(uid).append("' limit ").append(limit).append(")");
		List<ThreadList> threadList = new ArrayList<ThreadList>();
		for (Row row : session.execute(builder.toString())) {
			ThreadList thread = new ThreadList();
			System.out.println(row.toString());
			thread.setHidden(row.getBool("hidden"));
			thread.setHidefrom_date(row.getDate("hidefrom_time"));
			threadList.add(thread);
		}

		return threadList;
	}

	public boolean deleteChatThread(String tid) {
		StringBuilder builder = new StringBuilder();
		builder.append("update thread_list set lastread_time=").append(new Date()).append(" where tid='").append(tid).append("');");
				
		session.execute(builder.toString());
		System.out.println(builder.toString());
		return true;
	}

	public boolean updateRecentRead(String tid) {

		return true;
	}

}
